function Board.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 9
call Array.new 1
pop static 0
push constant 9
call Array.new 1
pop static 1
push constant 0
push static 0
add
push constant 192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 0
add
push constant 256
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 0
add
push constant 320
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 0
add
push constant 192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 0
add
push constant 256
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 0
add
push constant 320
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 0
add
push constant 192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 0
add
push constant 256
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 0
add
push constant 320
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push static 1
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 1
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 1
add
push constant 128
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 1
add
push constant 128
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 1
add
push constant 128
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 1
add
push constant 192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 1
add
push constant 192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 1
add
push constant 192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
call Array.new 1
pop this 0
push pointer 0
call Board.drawGrid 1
pop temp 0
push pointer 0
return
function Board.chooseMove 2
push argument 0
pop pointer 0
push constant 4
pop local 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
call Keyboard.keyPressed 0
pop local 1
push local 1
push constant 132
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
call Board.eraseReticle 2
pop temp 0
push local 0
push constant 1
add
pop local 0
push pointer 0
push local 0
call Board.drawReticle 2
pop temp 0
label IF_FALSE0
push local 1
push constant 130
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 0
call Board.eraseReticle 2
pop temp 0
push local 0
push constant 1
sub
pop local 0
push pointer 0
push local 0
call Board.drawReticle 2
pop temp 0
label IF_FALSE1
push local 1
push constant 128
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 0
call Board.eraseReticle 2
pop temp 0
push local 0
return
label IF_FALSE2
goto WHILE_EXP0
label WHILE_END0
push constant 4
return
function Board.move 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push argument 1
push argument 2
call Board.drawMove 3
pop temp 0
push constant 0
return
function Board.drawGrid 0
push argument 0
pop pointer 0
push constant 224
push constant 32
push constant 224
push constant 224
call Screen.drawLine 4
pop temp 0
push constant 288
push constant 32
push constant 288
push constant 224
call Screen.drawLine 4
pop temp 0
push constant 160
push constant 96
push constant 352
push constant 96
call Screen.drawLine 4
pop temp 0
push constant 160
push constant 160
push constant 352
push constant 160
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.drawO 0
push argument 0
pop pointer 0
push argument 1
push argument 2
push constant 20
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push constant 19
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Board.drawX 4
push argument 0
pop pointer 0
push argument 1
push constant 15
sub
pop local 0
push argument 1
push constant 15
add
pop local 1
push argument 2
push constant 15
add
pop local 2
push argument 2
push constant 15
sub
pop local 3
push local 0
push local 2
push local 1
push local 3
call Screen.drawLine 4
pop temp 0
push local 1
push local 2
push local 0
push local 3
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.eraseReticle 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Board.sanitizeLocation 2
pop argument 1
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call Board.drawReticle 2
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Board.drawReticle 6
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Board.sanitizeLocation 2
pop argument 1
push argument 1
push static 0
add
pop pointer 1
push that 0
pop local 4
push argument 1
push static 1
add
pop pointer 1
push that 0
pop local 5
push local 4
push constant 22
sub
pop local 0
push local 4
push constant 22
add
pop local 1
push local 5
push constant 22
add
pop local 2
push local 5
push constant 22
sub
pop local 3
push local 0
push local 2
push local 0
push local 3
call Screen.drawLine 4
pop temp 0
push local 0
push local 2
push local 1
push local 2
call Screen.drawLine 4
pop temp 0
push local 1
push local 2
push local 1
push local 3
call Screen.drawLine 4
pop temp 0
push local 1
push local 3
push local 0
push local 3
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.drawMove 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Board.sanitizeLocation 2
pop argument 1
push argument 1
push static 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
push static 1
add
pop pointer 1
push that 0
pop local 1
push argument 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
push local 1
call Board.drawO 3
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
push local 0
push local 1
call Board.drawX 3
pop temp 0
label IF_END0
push constant 0
return
function Board.winner 0
push argument 0
pop pointer 0
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 4
push this 0
add
pop pointer 1
push that 0
eq
push constant 4
push this 0
add
pop pointer 1
push that 0
push constant 8
push this 0
add
pop pointer 1
push that 0
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 34
call String.new 1
push constant 87
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 33
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 67
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
call String.new 1
push constant 88
call String.appendChar 2
call Output.printChar 1
pop temp 0
goto IF_END1
label IF_FALSE1
push constant 1
call String.new 1
push constant 79
call String.appendChar 2
call Output.printChar 1
pop temp 0
label IF_END1
call Sys.halt 0
pop temp 0
label IF_FALSE0
push constant 0
return
function Board.sanitizeLocation 0
push argument 0
pop pointer 0
push argument 1
push constant 1
neg
gt
push argument 1
push constant 9
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
return
label IF_FALSE0
push argument 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push argument 1
push constant 8
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 8
return
label IF_FALSE2
push constant 4
return

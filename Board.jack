class Board {
  field Array squares;
  static Array locationsx;
  static Array locationsy;

  
  constructor Board new(){
    let locationsx = Array.new(9);
    let locationsy = Array.new(9);

    let locationsx[0] = 192;
    let locationsx[1] = 256;
    let locationsx[2] = 320;
    let locationsx[3] = 192;
    let locationsx[4] = 256;
    let locationsx[5] = 320;
    let locationsx[6] = 192;
    let locationsx[7] = 256;
    let locationsx[8] = 320;

    let locationsy[0] = 64;
    let locationsy[1] = 64;
    let locationsy[2] = 64;
    let locationsy[3] = 128;
    let locationsy[4] = 128;
    let locationsy[5] = 128;
    let locationsy[6] = 192;
    let locationsy[7] = 192;
    let locationsy[8] = 192;

    let squares = Array.new(9);

    do drawGrid();
    return this;
  }

  method int chooseMove(boolean x){
    var int selection;
    var int key;
    let selection = 4;

    while(true){
      let key = Keyboard.keyPressed();
      if(key = 132){
        do eraseReticle(selection);
        let selection = selection + 1;
        do drawReticle(selection);
      }
      if(key = 130){
        do eraseReticle(selection);
        let selection = selection - 1;
        do drawReticle(selection);
      }
      if(key = 128){
        do eraseReticle(selection);
        do move(selection, x);
        return selection;
      }
    }
    return 4;
  }

  method boolean move(int location, boolean x){
    let squares[location] = x;
    do drawMove(location, x);
    /*return winner();*/
    return false;
  }

  method void drawGrid(){
    // left vertical
    do Screen.drawLine(224, 32, 224, 224);
    // right vertical
    do Screen.drawLine(288, 32, 288, 224);
    // top horizontal
    do Screen.drawLine(160, 96, 352, 96);
    // bottom horizontal
    do Screen.drawLine(160, 160, 352, 160);
    return;
  }

  method void drawO(int x, int y){
    do Screen.drawCircle(x, y, 20);
    do Screen.setColor(false);
    do Screen.drawCircle(x, y, 19);
    do Screen.setColor(true);
    return;
  }

  method void drawX(int x, int y){
    var int left, right, top, bottom;

    let left = x - 15;
    let right = x + 15;
    let top = y + 15;
    let bottom = y - 15;

    do Screen.drawLine(left, top, right, bottom);
    do Screen.drawLine(right, top, left, bottom);

    return;
  }

  method void eraseReticle(int location){
    let location = sanitizeLocation(location);
    do Screen.setColor(false);
    do drawReticle(location);
    do Screen.setColor(true);
    return; 
  }
  method void drawReticle(int location){
    var int left, right, top, bottom;
    var int x, y;
    let location = sanitizeLocation(location);
    let x = locationsx[location];
    let y = locationsy[location];

    let left = x - 22;
    let right = x + 22;
    let top = y + 22;
    let bottom = y - 22;
    
    do Screen.drawLine(left, top, left, bottom);
    do Screen.drawLine(left, top, right, top);
    do Screen.drawLine(right, top, right, bottom);
    do Screen.drawLine(right, bottom, left, bottom);

    return; 
  }

  method void drawMove(int location, boolean x){
    var int xcenter;
    var int ycenter;
    let location = sanitizeLocation(location);
    let xcenter = locationsx[location];
    let ycenter = locationsy[location];
    
    if(x){
      do drawO(xcenter, ycenter);
    }else{
      do drawX(xcenter, ycenter);
    }
    return;
  }

  method void winner(){
    if((squares[0] = squares[4]) & (squares[4] = squares[8])){
      do Output.printString("We have a winner! Congratulations ");
      if(squares[0] = 1){
        do Output.printChar("X");
      }else{
        do Output.printChar("O");
      }
      do Sys.halt();
    }
    return;
  }
  
  method int sanitizeLocation(int location){
    if((location > -1) & (location < 9)){
      return location;
    }
    if(location < 0){
      return 0;
    }
    if(location > 8){
      return 8;
    }
    return 4;
  }
}
